{"version":3,"file":"static/js/842.4d7308b7.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // const history = useHistory();\n  //\n  let navigate = useNavigate();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      // await sendRequest(\n      //   \"http://localhost:5000/api/places\",\n      //   \"POST\",\n      //   JSON.stringify({\n      //     title: formState.inputs.title.value,\n      //     description: formState.inputs.description.value,\n      //     address: formState.inputs.address.value,\n      //     creator: auth.userId,\n      //   }),\n      //   { \"Content-Type\": \"application/json\" }\n      // );\n      // history.push(\"/\");\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      // formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n      // await sendRequest(\"http://localhost:5000/api/places\", \"POST\", formData, {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              WHITOUT CUSTOM HOOK\n\n\n\n\n\n\n\n\n\n\nimport React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport \"./PlaceForm.css\";\n\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nconst NewPlace = () => {\n  //\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: { value: \"\", isValid: false },\n      description: { value: \"\", isValid: false },\n      address: { value: \"\", isValid: false },\n    },\n    isValid: false,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const placeSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n\n*/\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState(); // object kelo\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    // console.log(fileReader);\r\n    fileReader.onload = () => {\r\n      //2\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    //1\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid; //false\r\n    // console.log(event.target); //  <input../>\r\n    // console.log(event.target.files); // FileList {0: File, length: 1}\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0]; //{}\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    // console.log(props.id); //image\r\n    // validation  image     {}            true\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        // after choosing file\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  // he la hal component , li fo2 lal props\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        //if its undefined..continue , yaane ruh 3al next key\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n          // console.log(formIsValid);\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n          // console.log(formIsValid);\n        }\n      }\n\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n  //\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    // console.log(validators); [{type: 'MINLENGTH', val: 5}]\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","navigate","useNavigate","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}