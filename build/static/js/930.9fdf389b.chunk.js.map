{"version":3,"file":"static/js/930.9fdf389b.chunk.js","mappings":"oJAYA,EARa,SAACA,GACZ,OACE,gBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAM,SAC3DF,EAAMG,UAGb,C,4HCMA,EAZe,SAACH,GACd,OACE,gBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAAM,UAC9D,gBACEE,IAAKJ,EAAMK,MACXC,IAAKN,EAAMM,IACXJ,MAAO,CAAEK,MAAOP,EAAMO,MAAOC,OAAQR,EAAMO,UAInD,E,SCiBA,EAxBiB,SAACP,GAEhB,OACE,eAAIC,UAAU,YAAW,UACvB,SAACQ,EAAA,EAAI,CAACR,UAAU,qBAAoB,UAClC,UAAC,KAAI,CAACS,GAAE,WAAMV,EAAMW,GAAE,WAAU,WAC9B,gBAAKV,UAAU,mBAAkB,UAC/B,SAAC,EAAM,CACLI,MAAK,UAAKO,+BAA+B,YAAIZ,EAAMK,OACnDC,IAAKN,EAAMa,UAGf,iBAAKZ,UAAU,kBAAiB,WAC9B,wBAAKD,EAAMa,QACX,0BACGb,EAAMc,WAAU,IAAwB,IAArBd,EAAMc,WAAmB,QAAU,qBAOrE,ECGA,EA1BkB,SAACd,GACjB,OAA2B,IAAvBA,EAAMe,MAAMC,QAEZ,gBAAKf,UAAU,SAAQ,UACrB,SAACQ,EAAA,EAAI,WACH,iDAON,eAAIR,UAAU,aAAY,SACvBD,EAAMe,MAAME,KAAI,SAACC,GAAI,OACpB,SAAC,EAAQ,CAEPP,GAAIO,EAAKP,GACTN,MAAOa,EAAKb,MACZQ,KAAMK,EAAKL,KACXC,WAAYI,EAAKC,OAAOH,QAJnBE,EAAKP,GAKV,KAIV,E,2BCOA,EA9Bc,WACZ,OAAsDS,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WACvC,GAAsCC,EAAAA,EAAAA,YAAU,eAAzCC,EAAW,KAAEC,EAAc,KAelC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,yCAAG,kHAEYN,EACzBX,0CACA,KAAD,EAFKkB,EAAY,OAIlBH,EAAeG,EAAaC,OAAO,uGAEtC,kBARe,mCAShBF,GACF,GAAG,CAACN,KAGF,UAAC,WAAc,YACb,SAACS,EAAA,EAAU,CAACV,MAAOA,EAAOW,QAAST,IAClCH,IACC,gBAAKpB,UAAU,SAAQ,UACrB,SAACiC,EAAA,EAAc,OAGjBb,GAAaK,IAAe,SAAC,EAAS,CAACX,MAAOW,MAGtD,C","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Avatar.css\";\n\nconst Avatar = (props) => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UserItem.css\";\n\nconst UserItem = (props) => {\n  // console.log(props.image);\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n\n/*\n\n// without custom hook\nimport React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\n\n// The useEffect hook should return nothing or a clean up function. Because async functions return a Promise, \n// the useEffect will give you a warning like this \" An effect function must not return \n// anything besides a function, which is used for clean-up.\n\n// It looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, \n// write the async function inside your effect and call it immediately...\" So, basically,\n//  you are not allowed.\n\n\n\nconst Users = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  // its not recomended to use useEffect( async () => { like that\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:5000/api/users\");\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={errorHandler} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </>\n  );\n};\n\nexport default Users;\n\n\n\n\n*/\n"],"names":["props","className","style","children","src","image","alt","width","height","Card","to","id","process","name","placeCount","items","length","map","user","places","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","fetchUsers","responseData","users","ErrorModal","onClear","LoadingSpinner"],"sourceRoot":""}